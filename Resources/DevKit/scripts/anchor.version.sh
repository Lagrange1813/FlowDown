#!/bin/zsh

cd "$(dirname "$0")"

while [[ ! -d .git ]] && [[ "$(pwd)" != "/" ]]; do
    cd ..
done

if [[ -d .git ]] && [[ -d FlowDown.xcworkspace ]]; then
    echo "[*] found project root: $(pwd)"
else
    echo "[!] could not find project root"
    exit 1
fi

PROJECT_ROOT=$(pwd)
ANCHOR_FILE="$PROJECT_ROOT/FlowDown/Backend/Supplement/AnchorVersion.swift"

CURRENT_ANCHOR_VERSION=$(grep "version: String = " $ANCHOR_FILE | head -1)
CURRENT_ANCHOR_VERSION=$(echo $CURRENT_ANCHOR_VERSION | sed -E 's/.*version: String = "(.*)".*/\1/')
echo "[*] CURRENT_ANCHOR_VERSION: $CURRENT_ANCHOR_VERSION"

CURRENT_ANCHOR_BUILD=$(grep "build: Int = " $ANCHOR_FILE | head -1)
CURRENT_ANCHOR_BUILD=$(echo $CURRENT_ANCHOR_BUILD | sed -E 's/.*build: Int = ([0-9]+).*/\1/')
echo "[*] CURRENT_ANCHOR_BUILD: $CURRENT_ANCHOR_BUILD"

READ_VERSION=$(grep "MARKETING_VERSION =" ./FlowDown.xcodeproj/project.pbxproj | head -1)
READ_VERSION=$(echo $READ_VERSION | sed -E 's/.*MARKETING_VERSION = (.*);/\1/')
# 去除首尾引号
READ_VERSION=$(echo $READ_VERSION | sed -E 's/^"(.*)"$/\1/')
echo "[*] MARKETING_VERSION: $READ_VERSION"

READ_BUILD=$(grep "CURRENT_PROJECT_VERSION =" ./FlowDown.xcodeproj/project.pbxproj | head -1)
READ_BUILD=$(echo $READ_BUILD | sed -E 's/.*CURRENT_PROJECT_VERSION = ([0-9]+).*/\1/')
echo "[*] CURRENT_PROJECT_VERSION: $READ_BUILD"

# only update if the version or build number has changed
if [[ "$CURRENT_ANCHOR_VERSION" == "$READ_VERSION" ]] && [[ "$CURRENT_ANCHOR_BUILD" == "$READ_BUILD" ]]; then
    echo "[*] version and build number have not changed"
    exit 0
fi

# generate a random hex string for app store connect to get the reviewer's model profile
MAGIC_TEXT=$(openssl rand -hex 16)

#
# // this file is generated by the build script
#
# import Foundation
#
# enum AnchorVersion {
#     static let version: String = "1.0"
#     static let build: Int = 30
# #if DEBUG
#     static let magical: String = "c100345c-0213-4c25-89fe-86ed0e6d8848"
#     #else
#     static let magical: String = "bda6cdfbfb4443772eb5b28041b83bf7"
# #endif
# }
#

echo "// this file is generated by the build script" >$ANCHOR_FILE
echo "" >>$ANCHOR_FILE
echo "import Foundation" >>$ANCHOR_FILE
echo "" >>$ANCHOR_FILE
echo "enum AnchorVersion {" >>$ANCHOR_FILE
echo "   static let version: String = \"$READ_VERSION\"" >>$ANCHOR_FILE
echo "   static let build: Int = $READ_BUILD" >>$ANCHOR_FILE
echo "#if DEBUG" >>$ANCHOR_FILE
echo "   static let magical: String = \"deadbeef\"" >>$ANCHOR_FILE
echo "#else" >>$ANCHOR_FILE
echo "   static let magical: String = \"$MAGIC_TEXT\"" >>$ANCHOR_FILE
echo "#endif" >>$ANCHOR_FILE
echo "}" >>$ANCHOR_FILE

echo "[*] updated $ANCHOR_FILE"
